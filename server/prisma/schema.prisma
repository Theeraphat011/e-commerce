generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  name      String?
  picture   String?
  role      String   @default("USER")
  enabled   Boolean  @default(true)
  address   String? // ? มีหรือไม่่มีก็ได้
  order     Order[]
  cart      Cart[]
  createdAt DateTime @default(now()) // @default is a timestamp that is set automatically
  updatedAt DateTime @updatedAt // @updatedAt is a timestamp that is updated automatically
}

model Product {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  price       Float
  sold        Int              @default(0)
  quantity    Int              @default(0)
  orderItems  ProductOnOrder[]
  cartItems   ProductOnCart[]
  images      Image[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  category    Category?        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int?
}

model Order {
  id          Int              @id @default(autoincrement())
  products    ProductOnOrder[]
  cartTotal   Float
  orderStatus String           @default("Not Process")
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  orderBy     User             @relation(fields: [orderById], references: [id])
  orderById   Int
}

model ProductOnOrder {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade) // onDelete: Cascade ถ้าลบ product จะลบ productOnOrder ด้วย
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  count     Int
  price     Float
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Cart {
  id        Int             @id @default(autoincrement())
  products  ProductOnCart[]
  cartTotal Float
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  orderBy   User            @relation(fields: [orderById], references: [id])
  orderById Int
}

model ProductOnCart {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  count     Int
  price     Float
}

model Image {
  id         Int      @id @default(autoincrement())
  asset_id   String
  public_id  String
  url        String
  secure_url String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
}
